<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.wangmeng</groupId>
   		<artifactId>WMb2b-parent</artifactId>
   		<version>0.2.0-SNAPSHOT</version>
  	</parent>
	<artifactId>WMb2b-service</artifactId>
	<packaging>jar</packaging>
	<name>WMb2b-service</name>
 
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
 
		 <dependency>
		    <groupId>com.weibo</groupId>
		    <artifactId>motan-core</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>com.weibo</groupId>
		    <artifactId>motan-transport-netty</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>log4j-over-slf4j</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
		    <groupId>com.weibo</groupId>
		    <artifactId>motan-springsupport</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>com.weibo</groupId>
		    <artifactId>motan-registry-zookeeper</artifactId>
		</dependency>

		<!-- dependencies blow were only needed for spring-based features -->

		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-context</artifactId>
		</dependency>
 
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-aop</artifactId>    
		</dependency>
		
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>

		<!-- mybatis 包 -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
		</dependency>

		<!--mybatis spring 插件 -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
		</dependency>

		<!-- mysql连接 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<!-- 数据源 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
		</dependency>
		
		<!-- log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>

		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
		</dependency>
		
		<!-- memcached 的jar -->
		<dependency>
		    <groupId>com.googlecode.xmemcached</groupId>
		    <artifactId>xmemcached</artifactId>
		</dependency>
		
		<!-- 短信服务器要使用到 cxf-rt-rs-client 和 jackson 包 -->
		<dependency>
		    <groupId>org.apache.cxf</groupId>
		    <artifactId>cxf-rt-rs-client</artifactId>
		</dependency>
		
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>	
        
        <dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
		</dependency>

		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
		</dependency>


		<!-- 上传 -->
        <dependency>
		    <groupId>commons-net</groupId>
		    <artifactId>commons-net</artifactId>
		</dependency>
		
       <dependency>
		    <groupId>commons-httpclient</groupId>
		    <artifactId>commons-httpclient</artifactId>
		</dependency>
		
	<!-- 	<dependency>
		    <groupId>net.databinder</groupId>
		    <artifactId>dispatch-http_2.9.1</artifactId>
		    <version>0.8.10</version>
		</dependency> -->
		
        <dependency>
		    <groupId>org.apache.httpcomponents</groupId>
		    <artifactId>httpmime</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>commons-io</groupId>
		    <artifactId>commons-io</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.apache.httpcomponents</groupId>
		    <artifactId>httpcore-nio</artifactId>
		</dependency>
		
		<!-- common -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
		
	     <!-- excel上传 -->
	    <dependency>
	        <groupId>org.apache.poi</groupId>
	        <artifactId>poi</artifactId>
	    </dependency>

	    <dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi-ooxml</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi-ooxml-schemas</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>stax</groupId>
		    <artifactId>stax-api</artifactId>
		</dependency>
		
		<!-- google java library -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		
	    <dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
		</dependency>

		<!-- 银联 -->
		<dependency>
			<groupId>com.umpay.api</groupId>
			<artifactId>umpay</artifactId>
		</dependency>

		<dependency>
			<groupId>unionpay</groupId>
			<artifactId>unionpay</artifactId>
		</dependency>
        
        <!--oss-->
       <dependency>
		    <groupId>com.aliyun.oss</groupId>
		    <artifactId>aliyun-sdk-oss</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.jdom</groupId>
		    <artifactId>jdom</artifactId>
		</dependency>
		
		 <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
        </dependency>

		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-redis</artifactId>
		</dependency>
		
		<!--<dependency>-->
			<!--<groupId>javapns</groupId>-->
			<!--<artifactId>jdk16</artifactId>-->
		<!--</dependency>-->
		
		<dependency>
			<groupId>com.wangmeng</groupId>
			<artifactId>WMb2b-common</artifactId>
			<version>${version}</version>
		</dependency>
		
		<dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
        </dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<profiles.active>dev</profiles.active>
			</properties>
		</profile>
		<profile>
			<id>stage</id>
			<properties>
				<profiles.active>stage</profiles.active>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<profiles.active>prod</profiles.active>
			</properties>
		</profile>
	</profiles>

	<build>
		<directory>target</directory>
		<finalName>WMb2b-service</finalName>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>env/dev/*</exclude>
					<exclude>env/stage/*</exclude>
					<exclude>env/prod/*</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources/env/${profiles.active}</directory>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<configuration>
					<mainClass>com.wangmeng.server.WangmengServiceServer</mainClass>
					<addResources>false</addResources>
					<executable>true</executable>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<id>1</id>
					</execution>
				</executions>
			</plugin>

			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>

			<!-- 修改profile配置文件名为通用文件名 -->
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<move file="${project.build.directory}/classes/wm-config-${profiles.active}.properties" tofile="${project.build.directory}/classes/wm-config.properties"/>
								<move file="${project.build.directory}/classes/log4j-${profiles.active}.properties" tofile="${project.build.directory}/classes/log4j.properties"/>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- 增加依赖包
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			 -->
            <!-- 接口打成jar包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>   
	                <archive>  
	                    <!-- 打包后不包括pom的描述文件 -->
						<addMavenDescriptor>false</addMavenDescriptor>
	                 </archive> 
	                  <!--<manifest>-->
	                  	  <!--<addClasspath>true</addClasspath> -->
                          <!--<mainClass>com.wangmeng.server.WangmengServiceServer</mainClass>-->
                      <!--</manifest>-->
                      <!--<manifestEntries>-->
                          <!--<Class-Path>.</Class-Path>-->
                      <!--</manifestEntries>-->
                </configuration>

				<executions>
					<execution>
						<id>WMb2b-service-jar</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
						    <classifier>api</classifier>
							<!-- 无jarName则默认为改工程名称 -->
							<!-- <jarName>WMb2b-service</jarName> -->
							<includes>
								<include>**/service/api/**</include>
								<include>**/service/bean/**</include>
								<include>**/service/vo/**</include>
								<include>**/third/api/**</include>
								<include>**/third/bean/**</include>
								<include>**/base/bean/**</include>
								<include>**/common/utils/**</include>
								<include>**/common/constants/**</include>
								<include>**/common/json/**</include>
								<include>**/spring/legacy/**</include>
								<!-- admin -->
								<include>**/wangmeng/**/api/**</include>
								<include>**/wangmeng/**/constants/**</include>
								<include>**/wangmeng/**/domain/**</include>
								<include>**/wangmeng/**/filter/**</include>
								<include>**/wangmeng/**/model/**</include>
								<include>**/wangmeng/**/vo/**</include>
								<include>**/wangmeng/**/service/api/**</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
            
            
			<!-- deploy时只上传jar包到远程仓库的配置 -->
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<executions>
					 <execution>
						<id>default-deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
						<!-- skip默认deploy插件的执行 -->
						<configuration>
							<skip>true</skip>
						</configuration>
					 </execution>
					 <execution>
						<id>deploy-file</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy-file</goal>
						</goals>
						<configuration>
							<!-- 开发阶段上传到snapshot仓库，上线阶段上传到release仓库 -->
							<repositoryId>${project.distributionManagement.snapshotRepository.id}</repositoryId>
							<url>${project.distributionManagement.snapshotRepository.url}</url>
							<file>${project.build.directory}/${project.artifactId}-api.jar</file>
							<groupId>${project.groupId}</groupId>
							<artifactId>${project.artifactId}</artifactId>
							<version>${project.version}</version>
							<classifier>api</classifier>
						</configuration>
					 </execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>

